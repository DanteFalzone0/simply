/*
	Try also these settings into $argv:
	{"width": 500, "height": 400, "bgcolor": "lightblue", "dotsize": "random", "fontsize": 25, "padding": 40, "spacing": 5}
*/

unless !CANVAS then {
	echo "❌ The canvas module is required for this example";
	return;
}

%settings = [];
%settings->width = 300;
%settings->height = 300;
%settings->bgcolor = "lightblue";
%settings->dotsize = "random";
%settings->fontsize = 15;
%settings->padding = 20;
%settings->spacing = 5;

if $argv[0] then {
	&array_update(%settings, $argv[0]);
}

// str_compare returns 0 (falsy) when both are equal
unless (call &str_compare(%settings->dotsize, "random")) then {
	%settings->dotsize = &rand(1, 25);
}

%c = call !CANVAS->init(%settings->width, %settings->height, %settings->bgcolor);
%draw = false;

call %c->fillRect(
	%settings->padding,
	%settings->padding,
	&sub(call %c->getWidth, &add(%settings->padding, %settings->padding)),
	&sub(call %c->getHeight, &add(%settings->padding, %settings->padding)),
	"rgba(0, 0, 0, 0.5)"
);

$fontsize = %settings->fontsize;
$spacing = %settings->spacing;
$x = &add(%settings->padding, $spacing);
$y = $x;
call %c->setFillStyle("white");
call %c->setFontStyle(&str_concat($fontsize, "px monospace"));

$maxwidth = &sub(call %c->getWidth, 80, 10);

// no loops ... yet
call %c->drawText($x, $y, "Interactive <canvas> example", $maxwidth, null, "gold");
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "🖱️ Left + move 🖱️:", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, &str_concat("Draw a ", %settings->dotsize, "x", %settings->dotsize, " square"), $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "🖱️ Left + ⌨️ CLTR:", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "Clear and draw a random rect.", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "🖱️ Left + ⌨️ Shift:", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "Draw a random rectangle", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "🖱️ Left + move + ⌨️ Shift:", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "Draw many random rectangles", $maxwidth);
$y = &sum($y, $fontsize, $spacing);
call %c->drawText($x, $y, "❗ All colors are random", $maxwidth);



// draws the stars on the corners
def &draw_stars {
	$size = call %c->measureText("⭐");

	$star_top_y = &add($size->translateY, 2);
	$star_right_x = &sub(call %c->getWidth, $size->width, $size->translateX);
	$star_bottom_y = &sum(&sub(call %c->getHeight, $size->height), $size->translateY, 2);
	$star_left_x = 0;

	call %c->drawText($star_left_x, $star_top_y, "⭐");
	call %c->drawText($star_right_x, $star_top_y, "⭐");
	call %c->drawText($star_left_x, $star_bottom_y, "⭐");
	call %c->drawText($star_right_x , $star_bottom_y, "⭐");
}
%draw_stars = &draw_stars;
&draw_stars();



def &draw_random {
	$width = &rand(1, call %c->getWidth);
	$height = &rand(1, call %c->getHeight);
	$x = &rand(0, &sub(call %c->getWidth, $width, 1));
	$y = &rand(0, &sub(call %c->getHeight, $height, 1));
	$color = call %c->getRandomColor;
	
	call %c->fillRect($x, $y, $width, $height, $color);
}
%draw_random = &draw_random;

def &onmove($e, $c) {
	/*
		if not %draw, return
		can also be read as "unless %draw isn't true, return".
	*/
	unless %draw return;
	
	// if the shift key isnt' pressed, draw the random square
	else unless $e->shift then {
		call %c->fillRect(
			$e->x, $e->y,
			%settings->dotsize,
			%settings->dotsize,
			call %c->getRandomColor
		);
	} else {
		call %draw_random;
		call %draw_stars;
	}
}

def &ondown($e) %draw = &iff($e->button, false, true);
def &onup %draw = false;

def &onclick($e) {
	if $e->shift then {
		call %draw_random;
		call %draw_stars;
	} else if $e->ctrl then {
		call %c->clear(%settings->bgcolor);
		call %draw_random;
		call %draw_stars;
	}
}

call %c->onmove(&onmove);
call %c->ondown(&ondown);
call %c->onup(&onup);
call %c->onclick(&onclick);
